<!DOCTYPE html>

    <html lang="en">
        <head>
          <meta charset="utf-8" />
         <meta name="viewport" content="width=device-width, initial-scale=1.0">


          <!--css, bootstrap etc-->
          <link rel="stylesheet" type="text/css" href="frontpage.css">
          <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css">
          <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/animate.css@3.5.2/animate.min.css">


          <!--burger icon next to title-->
          <link rel="shortcut icon" href="burger.png"/>


          <!--fonts-->
          <link href="https://fonts.googleapis.com/css?family=Raleway" rel="stylesheet">
          <link href="https://fonts.googleapis.com/css?family=Raleway:200,400" rel="stylesheet">
          <link href="https://fonts.googleapis.com/css?family=Fredoka+One" rel="stylesheet">
          <link href="https://fonts.googleapis.com/css?family=Fredoka+One&effect=shadow-multiple" rel="stylesheet">
          <link href="https://fonts.googleapis.com/css?family=Lilita+One" rel="stylesheet">
          <link href="https://fonts.googleapis.com/css?family=Lilita+One&effect=shadow-multiple" rel="stylesheet">
          <link href="https://fonts.googleapis.com/css?family=Montserrat:200,300,400,500,600" rel="stylesheet">


          <!--title-->
          <title>Foud: Recipe finder</title>


          <!--scripts-->
          <script
            src="https://code.jquery.com/jquery-3.3.1.min.js"
            integrity="sha256-FgpCb/KJQlLNfOu91ta32o/NMZxltwRo8QtmkMRdAu8="
            crossorigin="anonymous"></script>


          <!--javascript input-->

          <script>
          $(document).ready(function() {



            $('a[href^="#"]').on('click', function(event) {

                var target = $(this.getAttribute('href'));

                if( target.length ) {
                    event.preventDefault();
                    $('html, body').stop().animate({
                        scrollTop: target.offset().top
                    }, 1000);
                }
              });





              function autocomplete(inp, arr) {

  /*the autocomplete function takes two arguments,
  the text field element and an array of possible autocompleted values:*/
  var currentFocus;
  /*execute a function when someone writes in the text field:*/
  inp.addEventListener("input", function(e) {
      var a, b, i, val = this.value;
      /*close any already open lists of autocompleted values*/
      closeAllLists();
      if (!val) { return false;}
      currentFocus = -1;
      /*create a DIV element that will contain the items (values):*/
      a = document.createElement("DIV");
      a.setAttribute("id", this.id + "autocomplete-list");
      a.setAttribute("class", "autocomplete-items");
      /*append the DIV element as a child of the autocomplete container:*/
      this.parentNode.appendChild(a);
      /*for each item in the array...*/
      for (i = 0; i < arr.length; i++) {
        /*check if the item starts with the same letters as the text field value:*/
        if (arr[i].substr(0, val.length).toUpperCase() == val.toUpperCase()) {
          /*create a DIV element for each matching element:*/
          b = document.createElement("DIV");
          /*make the matching letters bold:*/
          b.innerHTML = "<strong>" + arr[i].substr(0, val.length) + "</strong>";
          b.innerHTML += arr[i].substr(val.length);
          /*insert a input field that will hold the current array item's value:*/
          b.innerHTML += "<input type='hidden' value='" + arr[i] + "'>";
          /*execute a function when someone clicks on the item value (DIV element):*/
              b.addEventListener("click", function(e) {
              /*insert the value for the autocomplete text field:*/
              inp.value = this.getElementsByTagName("input")[0].value;
              /*close the list of autocompleted values,
              (or any other open lists of autocompleted values:*/
              closeAllLists();
          });
          a.appendChild(b);
        }
      }
  });
  /*execute a function presses a key on the keyboard:*/
  inp.addEventListener("keydown", function(e) {
      var x = document.getElementById(this.id + "autocomplete-list");
      if (x) x = x.getElementsByTagName("div");
      if (e.keyCode == 40) {
        /*If the arrow DOWN key is pressed,
        increase the currentFocus variable:*/
        currentFocus++;
        /*and and make the current item more visible:*/
        addActive(x);
      } else if (e.keyCode == 38) { //up
        /*If the arrow UP key is pressed,
        decrease the currentFocus variable:*/
        currentFocus--;
        /*and and make the current item more visible:*/
        addActive(x);
      } else if (e.keyCode == 13) {
        /*If the ENTER key is pressed, prevent the form from being submitted,*/
        e.preventDefault();
        if (currentFocus > -1) {
          /*and simulate a click on the "active" item:*/
          if (x) x[currentFocus].click();
        }
      }
  });
  function addActive(x) {
    /*a function to classify an item as "active":*/
    if (!x) return false;
    /*start by removing the "active" class on all items:*/
    removeActive(x);
    if (currentFocus >= x.length) currentFocus = 0;
    if (currentFocus < 0) currentFocus = (x.length - 1);
    /*add class "autocomplete-active":*/
    x[currentFocus].classList.add("autocomplete-active");
  }
  function removeActive(x) {
    /*a function to remove the "active" class from all autocomplete items:*/
    for (var i = 0; i < x.length; i++) {
      x[i].classList.remove("autocomplete-active");
    }
  }
  function closeAllLists(elmnt) {
    /*close all autocomplete lists in the document,
    except the one passed as an argument:*/
    var x = document.getElementsByClassName("autocomplete-items");
    for (var i = 0; i < x.length; i++) {
      if (elmnt != x[i] && elmnt != inp) {
      x[i].parentNode.removeChild(x[i]);
    }
  }
}
/*execute a function when someone clicks in the document:*/
document.addEventListener("click", function (e) {
    closeAllLists(e.target);
});
}

var flavours = ["sweet","spicy", "hot", "fiery", "garlicky"];
var mealtype = ["breakfast","lunch","dinner","snack","dessert","brunch","supper","drink"];

autocomplete(document.getElementById("flavour"), flavours);
autocomplete(document.getElementById("time-of-day"), mealtype);


          });
          </script>

        <!--actual content-->
        </head>

        <!--little content top left-->
        <div class="container-fluid">
          <div class="reload-page align-middle">
            <a href="index.htm">
                <img class="burger-reload-page img-responsive" src="burger-3.png" alt="Go back to homepage"
                     width="50"
                     height="50"
                     >
            </a>
          </div>

            <div class="by-reload-btn container-fluid">
              <div class="row"
                <p>
                  <span class="logo-by-reload-btn col-md-4">Foud: </span>
                  <span class="text-by-reload-btn col-md-4">The best meal finder on the internet.</span>
                </p>
              </div>
            </div>

              <!--center items-->
              <!--logo-->
              <div class="foud-logo font-effect-shadow-multiple animated pulse">Foud</div>
              <!--animated text-->
              <div><p class="underneath-foud">Discover your <span class="animated-text"></span> meal.</p></div>
              <!--button-->
              <div class="button-one">
              <a href="#what-is-it" id="btn-showmehow">Show me more!</a>
              <div class="what text-center"><a style="text-decoration:none; color:white;" id="what-is-it"><p></p></a></div>
            </div>
            <!--speechbubble!-->
            <img class="speechbubble image-fluid" src="pixel-speech-bubble (1).gif" style="width:500px;height:70px;">

            <!--below to have generator:
                I feel like something ___ (tag) and/or ___ (tag) in ___ (scroll drop-down: minutes, hours) with up to ___ calories
                OPTIONAL
                without ___(tag)-->
            <form autocomplete="none" action="php"
            <div class="generates text-center">
                <div class="flavour-input"><p class="i-feel-like-smthg text-center"> I feel like something
                                            <input id="flavour" type="text" placeholder="e.g. spicy">
                                            for</input>
                                            <input id="time-of-day" type="text" placeholder="e.g. lunch"></input></p></div>
                                            <button class="find-it text-center text-center" name="name" value="value" type="submit">Find me the perfect meal!</button>
          </div>
        </form>




        </div>





        <body>

        </body>
</html>
